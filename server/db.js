const sqlite3 = require('sqlite3').verbose();

// Connect to the database
const db = new sqlite3.Database('./database.db', err => {
  if (err) {
    console.error('Database connection error:', err.message);
  } else {
    console.log('Connected to the database.');
  }
});

module.exports = db;

ARCHIVE_TABLE = "ARCHIVE_TABLE";
COLUMN_ARCHIVE_ID = "COLUMN_ARCHIVE_ID";
COLUMN_CUSTOMER_FIRST_NAME = "COLUMN_CUSTOMER_FIRST_NAME";
COLUMN_CUSTOMER_LAST_NAME = "COLUMN_CUSTOMER_LAST_NAME";
COLUMN_ROOM_NUMBER = "COLUMN_ROOM_NUMBER";
COLUMN_CHECK_IN_DATE = "COLUMN_CHECK_IN_DATE";
COLUMN_CHECK_OUT_DATE = "COLUMN_CHECK_OUT_DATE";
COLUMN_BOOKING_DATE = "COLUMN_BOOKING_DATE";

ADDRESS_TABLE = "ADDRESS_TABLE";
COLUMN_ADDRESS_ID = "COLUMN_ADDRESS_ID";
COLUMN_ADDRESS_STREET = "COLUMN_ADDRESS_STREET";
COLUMN_ADDRESS_APT = "COLUMN_ADDRESS_APT";
COLUMN_ADDRESS_POSTAL = "COLUMN_ADDRESS_POSTAL";
COLUMN_ADDRESS_PROVINCE = "COLUMN_ADDRESS_PROVINCE";
COLUMN_ADDRESS_CITY = "COLUMN_ADDRESS_CITY";

CHAIN_TABLE = "CHAIN_TABLE";
COLUMN_CHAIN_ID = "COLUMN_CHAIN_ID";
COLUMN_CHAIN_NAME = "COLUMN_CHAIN_NAME";
COLUMN_CHAIN_ADDRESS_ID = "COLUMN_ADDRESS_ID";
COLUMN_CHAIN_NUM_LOCATIONS = "COLUMN_CHAIN_NUM_LOCATIONS";
COLUMN_CHAIN_EMAIL = "COLUMN_CHAIN_EMAIL";
COLUMN_CHAIN_PHONE_NUMBERS = "COLUMN_CHAIN_PHONE_NUMBERS";

HOTEL_TABLE = "HOTEL_TABLE";
COLUMN_HOTEL_ID = "COLUMN_HOTEL_ID";
COLUMN_HOTEL_CHAIN_ID = "COLUMN_CHAIN_ID";
COLUMN_HOTEL_ARCHIVE_ID = "COLUMN_ARCHIVE_ID";
COLUMN_HOTEL_RATING = "COLUMN_HOTEL_RATING";
COLUMN_HOTEL_NUM_ROOMS = "COLUMN_HOTEL_NUM_ROOMS";
COLUMN_HOTEL_ADDRESS_ID = "COLUMN_ADDRESS_ID";
COLUMN_HOTEL_EMAIL = "COLUMN_HOTEL_EMAIL";
COLUMN_HOTEL_PHONE_NUMBERS = "COLUMN_HOTEL_PHONE_NUMBERS";

EMPLOYEE_TABLE = "EMPLOYEE_TABLE";
COLUMN_EMPLOYEE_ID = "COLUMN_EMPLOYEE_ID";
COLUMN_EMPLOYEE_HOTEL_ID = "COLUMN_HOTEL_ID";
COLUMN_EMPLOYEE_FIRST_NAME = "COLUMN_EMPLOYEE_FIRST_NAME";
COLUMN_EMPLOYEE_LAST_NAME = "COLUMN_EMPLOYEE_LAST_NAME";
COLUMN_EMPLOYEE_EMAIL = "COLUMN_EMPLOYEE_EMAIL";
COLUMN_EMPLOYEE_PHONE = "COLUMN_EMPLOYEE_PHONE";
COLUMN_EMPLOYEE_ADDRESS_ID = "COLUMN_ADDRESS_ID";
COLUMN_EMPLOYEE_ROLE = "COLUMN_EMPLOYEE_ROLE";

ROOM_TABLE = "ROOM_TABLE";
COLUMN_ROOM_ID = "COLUMN_ROOM_ID";
COLUMN_ROOM_HOTEL_ID = "COLUMN_HOTEL_ID";
COLUMN_ROOM_PRICE = "COLUMN_ROOM_PRICE";
COLUMN_ROOM_AMENITIES = "COLUMN_ROOM_AMENITIES";
COLUMN_ROOM_CAPACITY = "COLUMN_ROOM_CAPACITY";
COLUMN_ROOM_MOUNTAIN_VIEW = "COLUMN_ROOM_MOUNTAIN_VIEW";
COLUMN_ROOM_SEA_VIEW = "COLUMN_ROOM_SEA_VIEW";
COLUMN_ROOM_EXTENDABLE = "COLUMN_ROOM_EXTENDABLE";
COLUMN_ROOM_ISSUES = "COLUMN_ROOM_ISSUES";

CUSTOMER_TABLE = "CUSTOMER_TABLE";
COLUMN_CUSTOMER_ID = "COLUMN_CUSTOMER_ID";
COLUMN_CUSTOMER_IDENTIFICATION = "COLUMN_CUSTOMER_IDENTIFICATION";
COLUMN_CUSTOMER_FIRST_NAME = "COLUMN_CUSTOMER_FIRST_NAME";
COLUMN_CUSTOMER_LAST_NAME = "COLUMN_CUSTOMER_LAST_NAME";
COLUMN_CUSTOMER_EMAIL = "COLUMN_CUSTOMER_EMAIL";
COLUMN_CUSTOMER_REGISTRATION_DATE = "COLUMN_CUSTOMER_REGISTRATION_DATE";
COLUMN_CUSTOMER_CARDHOLDER_NAME = "COLUMN_CUSTOMER_CARDHOLDER_NAME";
COLUMN_CUSTOMER_CARD_NUMBER = "COLUMN_CUSTOMER_CARD_NUMBER";
COLUMN_CUSTOMER_CVV = "COLUMN_CUSTOMER_CVV";
COLUMN_CUSTOMER_CARD_EXPIRATION = "COLUMN_CUSTOMER_CARD_EXPIRATION";
COLUMN_CUSTOMER_BILLING_ADDRESS_ID = "COLUMN_ADDRESS_ID";
COLUMN_CUSTOMER_ADDRESS_ID = "COLUMN_ADDRESS_ID";

BOOKING_TABLE = "BOOKING_TABLE";
COLUMN_BOOKING_ID = "COLUMN_BOOKING_ID";
COLUMN_BOOKING_CUSTOMER_ID = "COLUMN_CUSTOMER_ID";
COLUMN_BOOKING_EMPLOYEE_ID = "COLUMN_EMPLOYEE_ID";
COLUMN_BOOKING_ROOM_ID = "COLUMN_ROOM_ID";
COLUMN_BOOKING_ARCHIVE_ID = "COLUMN_ARCHIVE_ID";
COLUMN_BOOKING_DATE_BOOKED = "COLUMN_BOOKING_DATE";
COLUMN_BOOKING_CUSTOMER_NAME = "COLUMN_CUSTOMER_NAME";
COLUMN_BOOKING_CHECK_IN_DATE = "COLUMN_CHECK_IN_DATE";
COLUMN_BOOKING_CHECK_OUT_DATE = "COLUMN_CHECK_OUT_DATE";
COLUMN_BOOKING_NUM_PEOPLE = "COLUMN_BOOKING_NUM_PEOPLE";
COLUMN_BOOKING_IS_RENTING = "COLUMN_BOOKING_IS_RENTING";
COLUMN_BOOKING_PAID_ONLINE = "COLUMN_BOOKING_PAID_ONLINE";


// CREATE THE ARCHIVE TABLE
db.run(`CREATE TABLE IF NOT EXISTS ${ARCHIVE_TABLE} (
  ${COLUMN_ARCHIVE_ID} INTEGER PRIMARY KEY AUTOINCREMENT,
  ${COLUMN_CUSTOMER_FIRST_NAME} TEXT NOT NULL,
  ${COLUMN_CUSTOMER_LAST_NAME} TEXT NOT NULL,
  ${COLUMN_ROOM_NUMBER} INTEGER NOT NULL,
  ${COLUMN_CHECK_IN_DATE} TEXT NOT NULL,
  ${COLUMN_CHECK_OUT_DATE} TEXT NOT NULL,
  ${COLUMN_BOOKING_DATE} TEXT NOT NULL,
)`);

// CREATE THE ADDRESS TABLE
db.run(`CREATE TABLE IF NOT EXISTS ${ADDRESS_TABLE} (
  ${COLUMN_ADDRESS_ID} INTEGER PRIMARY KEY AUTOINCREMENT,
  ${COLUMN_ADDRESS_STREET} TEXT NOT NULL,
  ${COLUMN_ADDRESS_APT} TEXT NOT NULL,
  ${COLUMN_ADDRESS_POSTAL} TEXT NOT NULL,
  ${COLUMN_ADDRESS_PROVINCE} TEXT NOT NULL,
  ${COLUMN_ADDRESS_CITY} TEXT NOT NULL,`);

// CREATE THE CHAIN TABLE
db.run(`CREATE TABLE IF NOT EXISTS ${CHAIN_TABLE} (
  ${COLUMN_CHAIN_ID} INTEGER PRIMARY KEY AUTOINCREMENT,
  ${COLUMN_CHAIN_NAME} TEXT NOT NULL,
  ${COLUMN_CHAIN_ADDRESS_ID} INTEGER NOT NULL,
  ${COLUMN_CHAIN_NUM_LOCATIONS} INTEGER NOT NULL,
  ${COLUMN_CHAIN_EMAIL} TEXT NOT NULL,
  ${COLUMN_CHAIN_PHONE_NUMBERS} TEXT NOT NULL,
  FOREIGN KEY (${COLUMN_CHAIN_ADDRESS_ID}) REFERENCES ${ADDRESS_TABLE}(${COLUMN_ADDRESS_ID}),
)`);

// CREATE THE HOTEL TABLE
db.run(`CREATE TABLE IF NOT EXISTS ${HOTEL_TABLE} (
  ${COLUMN_HOTEL_ID} INTEGER PRIMARY KEY AUTOINCREMENT,
  ${COLUMN_HOTEL_CHAIN_ID} INTEGER NOT NULL,
  ${COLUMN_HOTEL_ARCHIVE_ID} INTEGER,
  ${COLUMN_HOTEL_RATING} INTEGER NOT NULL,
  ${COLUMN_HOTEL_NUM_ROOMS} INTEGER NOT NULL,
  ${COLUMN_HOTEL_ADDRESS_ID} INTEGER NOT NULL,
  ${COLUMN_HOTEL_EMAIL} TEXT NOT NULL,
  ${COLUMN_HOTEL_PHONE_NUMBERS} TEXT NOT NULL,
  FOREIGN KEY (${COLUMN_HOTEL_CHAIN_ID}) REFERENCES ${CHAIN_TABLE}(${COLUMN_CHAIN_ID}),
  FOREIGN KEY (${COLUMN_HOTEL_ARCHIVE_ID}) REFERENCES ${ARCHIVE_TABLE}(${COLUMN_ARCHIVE_ID}),
  FOREIGN KEY (${COLUMN_HOTEL_ADDRESS_ID}) REFERENCES ${ADDRESS_TABLE}(${COLUMN_ADDRESS_ID}),
)`);

// CREATE THE EMPLOYEE TABLE
db.run(`CREATE TABLE IF NOT EXISTS ${EMPLOYEE_TABLE} (
  ${COLUMN_EMPLOYEE_ID} INTEGER PRIMARY KEY AUTOINCREMENT,
  ${COLUMN_EMPLOYEE_HOTEL_ID} INTEGER,
  ${COLUMN_EMPLOYEE_FIRST_NAME} TEXT,
  ${COLUMN_EMPLOYEE_LAST_NAME} TEXT,
  ${COLUMN_EMPLOYEE_ADDRESS_ID} INTEGER,
  ${COLUMN_EMPLOYEE_ROLE} TEXT,
  FOREIGN KEY (${COLUMN_EMPLOYEE_HOTEL_ID}) REFERENCES ${HOTEL_TABLE}(${COLUMN_HOTEL_ID}),
  FOREIGN KEY (${COLUMN_EMPLOYEE_ADDRESS_ID}) REFERENCES ${ADDRESS_TABLE}(${COLUMN_ADDRESS_ID}),
)`);

// CREATE THE ROOM TABLE
db.run(`CREATE TABLE IF NOT EXISTS ${ROOM_TABLE} (
  ${COLUMN_ROOM_ID} INTEGER PRIMARY KEY AUTOINCREMENT,
  ${COLUMN_ROOM_HOTEL_ID} INTEGER,
  ${COLUMN_ROOM_PRICE} FLOAT,
  ${COLUMN_ROOM_AMENITIES} TEXT,
  ${COLUMN_ROOM_CAPACITY} INTEGER,
  ${COLUMN_ROOM_MOUNTAIN_VIEW} BOOLEAN,
  ${COLUMN_ROOM_SEA_VIEW} BOOLEAN,
  ${COLUMN_ROOM_EXTENDABLE} BOOLEAN,
  ${COLUMN_ROOM_ISSUES} TEXT,
  FOREIGN KEY (${COLUMN_ROOM_HOTEL_ID}) REFERENCES ${HOTEL_TABLE}(${COLUMN_HOTEL_ID}),
)`);

// CREATE THE CUSTOMER TABLE
db.run(`CREATE TABLE IF NOT EXISTS ${CUSTOMER_TABLE} (
  ${COLUMN_CUSTOMER_ID} INTEGER PRIMARY KEY AUTOINCREMENT,
  ${COLUMN_CUSTOMER_IDENTIFICATION} TEXT,
  ${COLUMN_CUSTOMER_FIRST_NAME} TEXT,
  ${COLUMN_CUSTOMER_LAST_NAME} TEXT,
  ${COLUMN_CUSTOMER_EMAIL} TEXT,
  ${COLUMN_CUSTOMER_REGISTRATION_DATE} TEXT,
  ${COLUMN_CUSTOMER_CARDHOLDER_NAME} TEXT,
  ${COLUMN_CUSTOMER_CARD_NUMBER} TEXT,
  ${COLUMN_CUSTOMER_CVV} TEXT,
  ${COLUMN_CUSTOMER_CARD_EXPIRATION} TEXT,
  ${COLUMN_CUSTOMER_BILLING_ADDRESS_ID} INTEGER,
  ${COLUMN_CUSTOMER_ADDRESS_ID} INTEGER,
  FOREIGN KEY (${COLUMN_CUSTOMER_BILLING_ADDRESS_ID}) REFERENCES ${ADDRESS_TABLE}(${COLUMN_ADDRESS_ID}),
  FOREIGN KEY (${COLUMN_CUSTOMER_ADDRESS_ID}) REFERENCES ${ADDRESS_TABLE}(${COLUMN_ADDRESS_ID}),
)`);

// CREATE THE BOOKING TABLE
db.run(`CREATE TABLE IF NOT EXISTS ${BOOKING_TABLE} (
  ${COLUMN_BOOKING_ID} INTEGER PRIMARY KEY AUTOINCREMENT,
  ${COLUMN_BOOKING_CUSTOMER_ID} INTEGER,
  ${COLUMN_BOOKING_EMPLOYEE_ID} INTEGER,
  ${COLUMN_BOOKING_ROOM_ID} INTEGER,
  ${COLUMN_BOOKING_ARCHIVE_ID} INTEGER,
  ${COLUMN_BOOKING_DATE_BOOKED} TEXT,
  ${COLUMN_BOOKING_CUSTOMER_NAME} TEXT,
  ${COLUMN_BOOKING_CHECK_IN_DATE} TEXT,
  ${COLUMN_BOOKING_CHECK_OUT_DATE} TEXT,
  ${COLUMN_BOOKING_NUM_PEOPLE} INTEGER,
  ${COLUMN_BOOKING_IS_RENTING} BOOLEAN,
  ${COLUMN_BOOKING_PAID_ONLINE} BOOLEAN,
  FOREIGN KEY (${COLUMN_BOOKING_CUSTOMER_ID}) REFERENCES ${CUSTOMER_TABLE}(${COLUMN_CUSTOMER_ID}),
  FOREIGN KEY (${COLUMN_BOOKING_EMPLOYEE_ID}) REFERENCES ${EMPLOYEE_TABLE}(${COLUMN_EMPLOYEE_ID}),
  FOREIGN KEY (${COLUMN_BOOKING_ROOM_ID}) REFERENCES ${ROOM_TABLE}(${COLUMN_ROOM_ID}),
  FOREIGN KEY (${COLUMN_BOOKING_ARCHIVE_ID}) REFERENCES ${ARCHIVE_TABLE}(${COLUMN_ARCHIVE_ID}),
)`);
